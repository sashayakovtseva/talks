Linux file descriptors
20 Jun 2019

Sasha Yakovtseva
Golang developer, iTechArt
a.yakautsava@itechart-group.com

* Everything is a file

    ./myprog 2>/dev/null
    ./myprog > res.out
    ./myscript 2>&1 | less
    head -c 500 /dev/urandom | base64
    ls | diff /dev/fd/0 oldfilelist

* File descriptors table 

- for each process
- view in `/proc/PID/fd`

    { 
        file index
        CLOEXEC flag
    }

* Files table

System wide

    { 
        pos
        flags
        inode index
    }

.link http://man7.org/linux/man-pages/man2/open.2.html File flags

* Inodes table

System wide

    {
        file type
        locks
        hard links count
        size
        permissions
        owner UID
        GID
        ...
    }

* Put all together

.image fd-inode.png 500 _

* A single process shares file

Process A, fd 1 and fd 20

Steps:

    dup(1)          # it returned 20
    dup(1, 20)      # here we asked it to be 20

* Two processes share file 

Process A and B, fd 2

Steps:
 
    fork()
    clone()

* Two files refer a single inode

Process A, fd 0 
Process B, fd 3

Steps:
   
    open()

* Revision examples

    ./myprog 2>/dev/null
    ./myprog > res.out
    ./myscript 2>&1 | less
    head -c 500 /dev/urandom | base64
    ls | diff /dev/fd/0 oldfilelist

* Usage

.link https://github.com/sylabs/singularity/blob/master/cmd/starter/c/starter.c#L857 Singularity runtime
